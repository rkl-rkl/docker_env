version: '3'
services:
  # go:
  #   build: 
  #     args:
  #       GO_VERSION: golang:${GO_VERSION}
  #       GOPROXY: ${GOPROXY}
  #       MAINTAINER: ${MAINTAINER}
  #     context: ./services/go
  #   container_name: docker_go
  #   restart: always
  #   networks:
  #     - test_networks
  #   volumes:
  #     - ${GO_SOURCE_DIR}:/go/src:rw
  php_fpm:
    build:
      args:
        PHP_VERSION: php:${PHP_VERSION}-fpm-alpine
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        MAINTAINER: ${MAINTAINER}
        SYSTEM_ENV: ${SYSTEM_ENV}
        EXTENSION_REDIS: ${PHP_EXTENSION_REDIS}
        EXTENSION_MEMCACHED: ${PHP_EXTENSION_MEMCACHED}
        COMPOSER_VERSION: ${COMPOSER_VERSION}
        TZ: ${TZ}
      context: ./services/php
    container_name: docker_php_fpm
    restart: always
    ports:
      - 9000
    networks:
      - test_networks
    volumes:
      - ${SOURCE_DIR}:/var/www/html:rw
      - ${PHP_CONF_INI}:/usr/local/etc/php/php.ini:ro
      - ${PHP_LOG_DIR}:/var/log:rw
  nginx:
    build:
      args:
        NGINX_VERSION: ${NGINX_VERSION}
        MAINTAINER: ${MAINTAINER}
      context: ./services/nginx
    container_name: docker_nginx
    restart: always
    ports:
      - "${NGINX_HTTP_PORT}:80"
      - "${NGINX_HTTPS_PORT}:443"
    networks:
      - test_networks
    volumes:    #挂载
      - ${SOURCE_DIR}:/usr/share/nginx/html/:rw
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
      - ${NGINX_CONF}:/etc/nginx/nginx.conf:ro
      - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
    environment:
      TZ: Asia/Shanghai
  db:
    image: mysql:${MYSQL_VERSION}
    container_name: docker_mysql
    restart: always
    environment:  # 设定环境变量，只给定名称的变量会自动获取运行 Compose 主机上对应变量的值
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: Asia/Shanghai
    networks:
      - test_networks
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - ${MYSQL_DATA}:/var/lib/mysql/:rw  #挂载数据卷，将mysql的数据保存在宿主机
  redis:
    image: redis:${REDIS_VERSION}
    container_name: docker_redis
    restart: always
    networks:
      - test_networks
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - ${REDIS_CONF}:/etc/redis/redis.conf:ro
      - ${REDIS_DATA}:/data:rw  #挂载数据卷，将redis持久化的数据保存在宿主机的该目录
    environment:
      TZ: Asia/Shanghai

  redis_slave1:
    image: redis:${REDIS_VERSION_SLAVE1}
    container_name: docker_redis_slave1
    restart: always
    networks:
      - test_networks
    ports:
      - "${REDIS_PORT_SLAVE1}:6379"
    volumes:
      - ${REDIS_CONF_SLAVE1}:/etc/redis/redis.conf:ro
    environment:
      TZ: Asia/Shanghai

  redis_slave2:
    image: redis:${REDIS_VERSION_SLAVE2}
    container_name: docker_redis_slave2
    restart: always
    networks:
      - test_networks
    ports:
      - "${REDIS_PORT_SLAVE2}:6379"
    volumes:
      - ${REDIS_CONF_SLAVE2}:/etc/redis/redis.conf:ro
    environment:
      TZ: Asia/Shanghai
  # memcached:
  #   image: memcached:${MEMCACHED_VERSION}
  #   container_name: memcached
  #   ports:
  #     - "${MEMCACHED_HOST_PORT}:11211"
  #   environment:
  #     MEMCACHED_CACHE_SIZE: "${MEMCACHED_CACHE_SIZE}"

networks:
  test_networks:
    driver: bridge
